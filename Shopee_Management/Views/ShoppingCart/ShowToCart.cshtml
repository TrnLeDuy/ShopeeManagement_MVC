@model Shopee_Management.Models.ModelTrangGioHang

@{
    ViewBag.Title = "ShowToCart";
    Layout = "~/Views/Shared/_ShopeeLayout.cshtml";
}
<link rel="stylesheet" href="~/assets/css/trangGioHang.css" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<body>
    <h2 class="text-center">Giỏ hàng</h2>

    <div class="container">
        <table id="cart" class="table table-hover table-condensed">
            <thead>
                <tr>
                    <th style="width:50%">Tên sản phẩm</th>
                    <th style="width:10%">Giá</th>
                    <th style="width:8%">Số lượng</th>
                    <th style="width:22%" class="text-center">Thành tiền</th>
                    <th style="width:10%"> </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Cart.Items)
                {
                    double total = Convert.ToDouble(item._shopping_product.SANPHAM.gia_sp.Value * item._shopping_quantity);
                    <tr>
                        <input type="hidden" value="@item._shopping_product.id_nbh" name="sp_nguoiBH" />
                        <td data-th="Product">
                            <div class="row">
                                <div class="col-sm-2 hidden-xs">

                                    <img src="" alt="@item._shopping_product.SANPHAM.ten_sp" class="img-responsive" width="100">
                                </div>
                                <div class="col-sm-10">
                                    <h4 class="nomargin">@item._shopping_product.SANPHAM.ten_sp</h4>
                                    <p>Mô tả của sản phẩm 1</p>
                                </div>
                            </div>
                        </td>
                        <td data-th="Price" class="numeric_value">@item._shopping_product.SANPHAM.gia_sp</td>
                        <td data-th="Quantity">
                            @using (Html.BeginForm("Update_Quantity_Cart", "ShoppingCart"))
                            {
                                <input type="hidden" value="@item._shopping_product.id_ctsp" name="ID_Product" />
                                <input class="form-control text-center" value="@item._shopping_quantity" type="number" name="Quantity" />
                                <input type="submit" value="Cập nhật" class="btn btn-info btn-sm" style="margin-top: 3px;" />
                            }
                        </td>
                        <td data-th="Subtotal" class="text-center numeric_value">@total</td>
                        <td class="actions" data-th="">
                            <a href="~/ShoppingCart/RemoveCart/@item._shopping_product.id_ctsp">Xóa</a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td>
                        <a href="@Url.Action("Index", "TrangChu")" class="btn btn-warning"><i class="fa fa-angle-left"></i> Tiếp tục mua hàng</a>
                    </td>
                    <td colspan="2" class="hidden-xs"> </td>
                    <td class="hidden-xs text-center">
                        <strong>Tổng tiền: @Model.Cart.Total_Money() đ</strong>
                    </td>
                    <td>
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td colspan="2" class="hidden-xs"> </td>
                    <td class="price-change">
                        <strong>Tổng tiền thanh toán: @Model.Cart.Total_Money() đ</strong>
                    </td>
                </tr>
                @{
                    double sum = 0;
                }

                @using (Html.BeginForm("CheckOut", "ShoppingCart", FormMethod.Post))
                {
                    foreach (var item in Model.Cart.Items)
                    {
                        double total = Convert.ToDouble(item._shopping_product.SANPHAM.gia_sp.Value * item._shopping_quantity);
                        sum += total;
                        <input type="hidden" value="@item._shopping_product.id_nbh" name="nguoiBH" />
                        <input type="hidden" id="subTotal" class="subTotal" name="SubTotal" />
                    }
                    <input type="hidden" id="totalMoney" value="@sum" name="TotalMoney" />
                    <input type="hidden" id="discountedTotalMoney" name="DiscountedTotalMoney" />

                    <tr>
                        <td>Phương thức thanh toán</td>
                        <td>
                            <select id="paymentMethod" name="PaymentMethod">
                                <option selected>Chọn phương thức thanh toán...</option>
                                <option value="0">Thanh toán khi nhận hàng</option>
                                <option value="1">Momo</option>
                                <option value="2">Paypal</option>
                            </select>
                        </td>
                    </tr>

                    <!-- Section for PayPal -->
                    <tr id="paypalSection" style="display: none;">
                        <td colspan="2">
                            <!-- Add any specific content or styling for PayPal -->
                            <div id="paypal-button-container"></div>
                        </td>
                    </tr>

                    <!-- Section for Voucher -->
                    <tr id="voucherSection">
                        <td>Mã khuyến mãi</td>
                        <td>
                            <select name="Voucher">
                                <option selected disabled>Chọn mã giảm giá...</option>
                                @foreach (var item in Model.khuyenmai)
                                {
                                    var idNBH = Model.Cart.Items.FirstOrDefault(cartItem => cartItem._shopping_product.id_nbh == item.id_nbh);

                                    if (idNBH != null)
                                    {
                                        <option data-nbh="@item.id_nbh" data-discount="@item.ty_le_giam" value="@item.id_voucher">@item.ty_le_giam % - (@item.NGUOIBANHANG.ten_cua_hang)</option>
                                    }
                                    else if (item.id_nv != null)
                                    {
                                        <option data-nv="@item.id_nv" data-discount="@item.ty_le_giam" value="@item.id_voucher">@item.ty_le_giam % - (Shopee)</option>
                                    }
                                }
                            </select>
                        </td>
                    </tr>

                    <tr>
                        <td></td>
                        <td>
                            <input type="submit" value="Thanh toán" class="btn btn-success btn-block" />
                        </td>
                    </tr>
                }
            </tfoot>
        </table>
    </div>
    <script src="https://www.paypal.com/sdk/js?client-id=AWZx2NxWwr0N9NXr50qm1Nbe2XQAu7o2wDwn9R6HtDGd0RR3PyoLf1s6u4nl-bwCJ62n6DPJn5Zt3ZL9"></script>
    <script>
        document.getElementById("paymentMethod").addEventListener("change", function () {
            var selectedMethod = this.value;
            if (selectedMethod === "2") { // Assuming "2" corresponds to PayPal
                initiatePayPalCheckout();
            }
        });

        function initiatePayPalCheckout() {
            // Use the PayPal SDK to create an order and initiate checkout
            paypal.Buttons({
                createOrder: function (data, actions) {
                    // Add logic to create an order on your server and return the order ID
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                currency_code: 'USD', // Update with your currency code
                                value: '10.00' // Update with the order total
                            }
                        }]
                    });
                },
                onApprove: function (data, actions) {
                    // Add logic to capture the payment on your server
                    return actions.order.capture().then(function (details) {
                        // Redirect to the success page
                        window.location.href = '/ShoppingCart/PaymentSuccess'; // Update with your controller action
                    });
                }
            }).render('#paypal-button-container')
                .catch(function (error) {
                    console.error('PayPal SDK failed to initialize:', error);
                    // Handle the error appropriately (e.g., display a message to the user)
                    alert('PayPal initialization failed. Please try again later.');
                });
        }
    </script>
    <!-- Add this script block after including jQuery -->
    <script>
        $(document).ready(function () {
            // Add an event listener to the voucher dropdown
            $('select[name="Voucher"]').change(function () {
                // Retrieve selected discount percentage and id_nbh
                var selectedVoucher = $(this).val();
                console.log('Selected Voucher:', selectedVoucher);

                var selectedDiscount = parseFloat($('option:selected', this).data('discount'));
                console.log('Selected Discount:', selectedDiscount);

                var selectedNbh = $('option:selected', this).data('nbh');
                console.log('Selected Nbh:', selectedNbh);

                var selectedNV = $('option:selected', this).data('nv');
                console.log('Selected NV:', selectedNV);

                var productIdNbhArray = $('input[name=sp_nguoiBH]').map(function () {
                    return $(this).val();
                }).get();

                console.log(productIdNbhArray);

                // Iterate through productIdNbhArray
                productIdNbhArray.forEach(function (productIdNbh, index) {
                    if (selectedNbh == undefined && selectedNV) {
                        var originalPrice0 = parseFloat($('table#cart tbody tr').eq(index).find('td[data-th="Price"]').text().replace(/[^\d.-]/g, ''));
                        var quantity0 = parseInt($('table#cart tbody tr').eq(index).find('input[name="Quantity"]').val());
                        var discountedPrice0 = (originalPrice0 * (100 - selectedDiscount)) / 100;
                        console.log(index);
                        console.log('Discounted Price:', discountedPrice0);
                        console.log('Discounted Price All:', discountedPrice0 * quantity0);
                        $('table#cart tbody tr').eq(index).find('td[data-th="Subtotal"]').text(((discountedPrice0 * quantity0)) + "đ");
                        $('table#cart tfoot .subTotal').eq(index).val((discountedPrice0 * quantity0));
                    }
                    // Check if productIdNbh matches selectedNbh
                    else if (productIdNbh === selectedNbh) {
                        // Iterate through the product rows
                        console.log("True" + productIdNbh);
                        var originalPrice = parseFloat($('table#cart tbody tr').eq(index).find('td[data-th="Price"]').text().replace(/[^\d.-]/g, ''));
                        console.log(originalPrice);
                        var quantity = parseInt($('table#cart tbody tr').eq(index).find('input[name="Quantity"]').val());

                        // Calculate the discounted price
                        var discountedPrice = (originalPrice * (100 - selectedDiscount)) / 100;
                        console.log(index);
                        console.log('Discounted Price:', discountedPrice);
                        console.log('Discounted Price All:', discountedPrice * quantity);

                        // Update the displayed subtotal for this product
                        $('table#cart tbody tr').eq(index).find('td[data-th="Subtotal"]').text(((discountedPrice * quantity)) + "đ");
                        $('table#cart tfoot .subTotal').eq(index).val((discountedPrice * quantity));
                    } else {
                        console.log("False" + productIdNbh);
                        var originalPrice1 = parseFloat($('table#cart tbody tr').eq(index).find('td[data-th="Price"]').text().replace(/[^\d.-]/g, ''));
                        var quantity1 = parseInt($('table#cart tbody tr').eq(index).find('input[name="Quantity"]').val());
                        console.log(index);
                        console.log('Discounted Price:', originalPrice1);
                        console.log('Discounted Price All:', originalPrice1 * quantity1);
                        $('table#cart tbody tr').eq(index).find('td[data-th="Subtotal"]').text(((originalPrice1 * quantity1)) + "đ");
                        $('table#cart tfoot .subTotal').eq(index).val((originalPrice1 * quantity1));
                    }
                });
                console.log(document.querySelectorAll('input[name=SubTotal]'));

                // Update the displayed total at the bottom of the table
                updateTotal();
            });

            // Function to update the displayed total
            function updateTotal() {
                var total = 0;

                // Iterate through the product rows and sum up the subtotals
                $('table#cart tbody tr').each(function () {
                    var subtotalText = $(this).find('td[data-th="Subtotal"]').text();
                    // Remove commas from the text and convert to a float
                    total += parseFloat(subtotalText.replace(/,/g, ''));
                });
                console.log(total);
                // Update the displayed total
                $('td.price-change strong').text('Tổng tiền thanh toán: ' + total + "đ");

                $('#discountedTotalMoney').val(total);
            }
        });
    </script>
    <script src="~/assets/js/chuyenDoiNumeric.js"></script>
</body>